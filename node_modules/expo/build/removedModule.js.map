{"version":3,"file":"removedModule.js","sourceRoot":"","sources":["../src/removedModule.ts"],"names":[],"mappings":"AAAA,IAAI,QAAQ,GAAa,EAAE,CAAC;AAC5B,IAAI,QAAQ,GAAa,EAAE,CAAC;AAC5B,IAAI,YAAY,GAAa,EAAE,CAAC;AAEhC,MAAM,CAAC,OAAO,UAAU,aAAa,CAAC,OAAO,EAAE,WAAW,EAAE,WAAW;IACrE,IAAI,OAAO,EAAE;QACX,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACvB,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC3B,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC/B,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;KAC9B;AACH,CAAC;AAED,SAAS,UAAU;IACjB,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;QACpB,OAAO;KACR;IACD,IAAI,YAAY,GAAG,EAAE,CAAC;IAEtB,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;IACzC,QAAQ,CAAC,IAAI,EAAE,CAAC;IAEhB,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;IACzC,QAAQ,CAAC,IAAI,EAAE,CAAC;IAEhB,YAAY,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC;IACjD,YAAY,CAAC,IAAI,EAAE,CAAC;IAEpB,YAAY,IAAI,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACxC,YAAY,IAAI,OAAO,CAAC;IACxB,YAAY,IAAI,sEAAsE,CAAC;IACvF,YAAY,IAAI,mBAAmB,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC;IAC5D,YAAY,IAAI,8FAA8F,CAAC;IAC/G,YAAY,IAAI,yFAAyF,CAAC;IAC1G,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;QACzB,YAAY,IAAI,MAAM,OAAO,IAAI,CAAC;IACpC,CAAC,CAAC,CAAC;IAEH,YAAY,IAAI,IAAI,CAAC;IACrB,MAAM,OAAO,GAAG,yHAAyH,YAAY,EAAE,CAAC;IACxJ,QAAQ,GAAG,EAAE,CAAC;IACd,QAAQ,GAAG,EAAE,CAAC;IACd,YAAY,GAAG,EAAE,CAAC;IAClB,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC;AAC3B,CAAC","sourcesContent":["let messages: string[] = [];\nlet packages: string[] = [];\nlet namedImports: string[] = [];\n\nexport default function removedModule(message, namedImport, packageName) {\n  if (__DEV__) {\n    messages.push(message);\n    packages.push(packageName);\n    namedImports.push(namedImport);\n    setTimeout(throwError, 1000);\n  }\n}\n\nfunction throwError() {\n  if (!messages.length) {\n    return;\n  }\n  let instructions = '';\n\n  messages = Array.from(new Set(messages));\n  messages.sort();\n\n  packages = Array.from(new Set(packages));\n  packages.sort();\n\n  namedImports = Array.from(new Set(namedImports));\n  namedImports.sort();\n\n  instructions += namedImports.join(', ');\n  instructions += `.\\n\\n`;\n  instructions += `1. Add correct versions of these packages to your project using:\\n\\n`;\n  instructions += `   expo install ${packages.join(' ')}\\n\\n`;\n  instructions += `   If \"install\" is not recognized as an expo command, update your expo-cli installation.\\n\\n`;\n  instructions += `2. Change your imports so they use specific packages instead of the \"expo\" package:\\n\\n`;\n  messages.forEach(message => {\n    instructions += ` - ${message}\\n`;\n  });\n\n  instructions += '\\n';\n  const message = `The following APIs have moved to separate packages and importing them from the \"expo\" package is no longer supported: ${instructions}`;\n  messages = [];\n  packages = [];\n  namedImports = [];\n  throw new Error(message);\n}\n"]}