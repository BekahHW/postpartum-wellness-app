{"version":3,"sources":["useRegisterNavigator.tsx"],"names":["React","nanoid","SingleNavigatorContext","useRegisterNavigator","key","useState","container","useContext","undefined","Error","useEffect","register","unregister"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,sBAAT,QAAuC,yBAAvC;AAEA;;;;;AAIA,eAAe,SAASC,oBAAT,GAAgC;AAC7C,QAAM,CAACC,GAAD,IAAQJ,KAAK,CAACK,QAAN,CAAe,MAAMJ,MAAM,EAA3B,CAAd;AACA,QAAMK,SAAS,GAAGN,KAAK,CAACO,UAAN,CAAiBL,sBAAjB,CAAlB;;AAEA,MAAII,SAAS,KAAKE,SAAlB,EAA6B;AAC3B,UAAM,IAAIC,KAAJ,CACJ,wFADI,CAAN;AAGD;;AAEDT,EAAAA,KAAK,CAACU,SAAN,CAAgB,MAAM;AACpB,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAA2BN,SAAjC;AAEAK,IAAAA,QAAQ,CAACP,GAAD,CAAR;AAEA,WAAO,MAAMQ,UAAU,CAACR,GAAD,CAAvB;AACD,GAND,EAMG,CAACE,SAAD,EAAYF,GAAZ,CANH;AAQA,SAAOA,GAAP;AACD","sourcesContent":["import * as React from 'react';\nimport { nanoid } from 'nanoid/non-secure';\nimport { SingleNavigatorContext } from './EnsureSingleNavigator';\n\n/**\n * Register a navigator in the parent context (either a navigation container or a screen).\n * This is used to prevent multiple navigators under a single container or screen.\n */\nexport default function useRegisterNavigator() {\n  const [key] = React.useState(() => nanoid());\n  const container = React.useContext(SingleNavigatorContext);\n\n  if (container === undefined) {\n    throw new Error(\n      \"Couldn't register the navigator. Have you wrapped your app with 'NavigationContainer'?\"\n    );\n  }\n\n  React.useEffect(() => {\n    const { register, unregister } = container;\n\n    register(key);\n\n    return () => unregister(key);\n  }, [container, key]);\n\n  return key;\n}\n"]}