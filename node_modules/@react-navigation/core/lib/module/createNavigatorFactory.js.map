{"version":3,"sources":["createNavigatorFactory.tsx"],"names":["Screen","createNavigatorFactory","Navigator","arguments","undefined","Error"],"mappings":"AAEA,OAAOA,MAAP,MAAmB,UAAnB;;AAGA;;;;;;;AAOA,eAAe,SAASC,sBAAT,CAKbC,SALa,EAKkB;AAC/B,SAAO,YAML;AACA,QAAIC,SAAS,CAAC,CAAD,CAAT,KAAiBC,SAArB,EAAgC;AAC9B,YAAM,IAAIC,KAAJ,CACJ,yMADI,CAAN;AAGD;;AAED,WAAO;AACLH,MAAAA,SADK;AAELF,MAAAA;AAFK,KAAP;AAID,GAjBD;AAkBD","sourcesContent":["import type * as React from 'react';\nimport type { ParamListBase, NavigationState } from '@react-navigation/routers';\nimport Screen from './Screen';\nimport type { TypedNavigator, EventMapBase } from './types';\n\n/**\n * Higher order component to create a `Navigator` and `Screen` pair.\n * Custom navigators should wrap the navigator component in `createNavigator` before exporting.\n *\n * @param Navigator The navigtor component to wrap.\n * @returns Factory method to create a `Navigator` and `Screen` pair.\n */\nexport default function createNavigatorFactory<\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase,\n  NavigatorComponent extends React.ComponentType<any>\n>(Navigator: NavigatorComponent) {\n  return function <ParamList extends ParamListBase>(): TypedNavigator<\n    ParamList,\n    State,\n    ScreenOptions,\n    EventMap,\n    typeof Navigator\n  > {\n    if (arguments[0] !== undefined) {\n      throw new Error(\n        \"Creating a navigator doesn't take an argument. Maybe you are trying to use React Navigation 4 API with React Navigation 5? See https://reactnavigation.org/docs/upgrading-from-4.x for migration guide.\"\n      );\n    }\n\n    return {\n      Navigator,\n      Screen,\n    };\n  };\n}\n"]}