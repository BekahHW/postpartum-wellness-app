{"version":3,"sources":["useThenable.tsx"],"names":["useThenable","create","promise","React","useState","resolved","value","then","result","state","setState","useEffect","cancelled","resolve"],"mappings":";;;;;;;AAAA;;;;;;AAEe,SAASA,WAAT,CAAwBC,MAAxB,EAAsD;AACnE,QAAM,CAACC,OAAD,IAAYC,KAAK,CAACC,QAAN,CAAeH,MAAf,CAAlB,CADmE,CAGnE;;AACA,MAAII,QAAQ,GAAG,KAAf;AACA,MAAIC,KAAJ;AAEAJ,EAAAA,OAAO,CAACK,IAAR,CAAcC,MAAD,IAAY;AACvBH,IAAAA,QAAQ,GAAG,IAAX;AACAC,IAAAA,KAAK,GAAGE,MAAR;AACD,GAHD;AAKA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,KAAK,CAACC,QAAN,CAAyC,CACjEC,QADiE,EAEjEC,KAFiE,CAAzC,CAA1B;AAKAH,EAAAA,KAAK,CAACQ,SAAN,CAAgB,MAAM;AACpB,QAAIC,SAAS,GAAG,KAAhB;;AAEA,UAAMC,OAAO,GAAG,YAAY;AAC1B,UAAIL,MAAJ;;AAEA,UAAI;AACFA,QAAAA,MAAM,GAAG,MAAMN,OAAf;AACD,OAFD,SAEU;AACR,YAAI,CAACU,SAAL,EAAgB;AACdF,UAAAA,QAAQ,CAAC,CAAC,IAAD,EAAOF,MAAP,CAAD,CAAR;AACD;AACF;AACF,KAVD;;AAYA,QAAI,CAACH,QAAL,EAAe;AACbQ,MAAAA,OAAO;AACR;;AAED,WAAO,MAAM;AACXD,MAAAA,SAAS,GAAG,IAAZ;AACD,KAFD;AAGD,GAtBD,EAsBG,CAACV,OAAD,EAAUG,QAAV,CAtBH;AAwBA,SAAOI,KAAP;AACD","sourcesContent":["import * as React from 'react';\n\nexport default function useThenable<T>(create: () => PromiseLike<T>) {\n  const [promise] = React.useState(create);\n\n  // Check if our thenable is synchronous\n  let resolved = false;\n  let value: T | undefined;\n\n  promise.then((result) => {\n    resolved = true;\n    value = result;\n  });\n\n  const [state, setState] = React.useState<[boolean, T | undefined]>([\n    resolved,\n    value,\n  ]);\n\n  React.useEffect(() => {\n    let cancelled = false;\n\n    const resolve = async () => {\n      let result;\n\n      try {\n        result = await promise;\n      } finally {\n        if (!cancelled) {\n          setState([true, result]);\n        }\n      }\n    };\n\n    if (!resolved) {\n      resolve();\n    }\n\n    return () => {\n      cancelled = true;\n    };\n  }, [promise, resolved]);\n\n  return state;\n}\n"]}