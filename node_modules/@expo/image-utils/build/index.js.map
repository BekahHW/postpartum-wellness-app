{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;;;;;;;;AAAA,+CAAiC;AA2B/B,sBAAK;AA1BP,mCAAyF;AA2BvF,+BA3BO,4BAAoB,CA2BP;AAFpB,+BAzB6B,4BAAoB,CAyB7B;AADpB,6BAxBmD,0BAAkB,CAwBnD;AAtBpB,iCAAkD;AAkBhD,oBAlBsB,gBAAS,CAkBtB;AAjBX,mCAA+E;AAkB7E,iCAlBO,8BAAsB,CAkBP;AACtB,2BAnB+B,wBAAgB,CAmB/B;AAChB,qBApBiD,kBAAU,CAoBjD;AAjBL,KAAK,UAAU,UAAU,CAC9B,OAA2B,EAC3B,WAAkC,EAAE;IAEpC,IAAI,MAAM,wBAAgB,EAAE,EAAE;QAC5B,OAAO,kBAAU,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;KACtC;IACD,OAAO,gBAAS,iCACT,OAAO,KAAE,MAAM,EAAE,oBAAa,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,aAAa,EAAE,OAAO,CAAC,KAAK,KACjF,QAAQ,CACT,CAAC;AACJ,CAAC;AAXD,gCAWC","sourcesContent":["import * as Cache from './Cache';\nimport { compositeImagesAsync, generateFaviconAsync, generateImageAsync } from './Image';\nimport { ImageFormat, ImageOptions, ResizeMode } from './Image.types';\nimport { convertFormat, jimpAsync } from './jimp';\nimport { findSharpInstanceAsync, isAvailableAsync, sharpAsync } from './sharp';\nimport { SharpCommandOptions, SharpGlobalOptions } from './sharp.types';\n\nexport async function imageAsync(\n  options: SharpGlobalOptions,\n  commands: SharpCommandOptions[] = []\n) {\n  if (await isAvailableAsync()) {\n    return sharpAsync(options, commands);\n  }\n  return jimpAsync(\n    { ...options, format: convertFormat(options.format), originalInput: options.input },\n    commands\n  );\n}\n\nexport {\n  jimpAsync,\n  findSharpInstanceAsync,\n  isAvailableAsync,\n  sharpAsync,\n  generateImageAsync,\n  generateFaviconAsync,\n  Cache,\n  compositeImagesAsync,\n};\n\nexport { SharpGlobalOptions, SharpCommandOptions, ResizeMode, ImageFormat, ImageOptions };\n"]}