{"version":3,"file":"Strings.js","sourceRoot":"","sources":["../../src/android/Strings.ts"],"names":[],"mappings":";;;;;AAAA,wDAA0B;AAC1B,gDAAwB;AACxB,mCAAiC;AAEjC,yCAA4E;AAG5E,MAAM,gBAAgB,GAAG,yBAAyB,CAAC;AAE5C,KAAK,UAAU,6BAA6B,CACjD,UAAkB,EAClB,EAAE,IAAI,GAAG,QAAQ,KAAwB,EAAE;IAE3C,OAAO,iCAAsB,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC;AACvE,CAAC;AALD,sEAKC;AAEM,KAAK,UAAU,mBAAmB,CAAC,WAAmB;IAC3D,OAAO,uBAAY,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,QAAQ,EAAE,gBAAgB,EAAE,CAAC,CAAC;AACzE,CAAC;AAFD,kDAEC;AAEM,KAAK,UAAU,oBAAoB,CACxC,WAAmB,EACnB,cAAmB;IAEnB,MAAM,UAAU,GAAG,IAAI,gBAAO,EAAE,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;IAC7D,MAAM,kBAAE,CAAC,SAAS,CAAC,cAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;IAC9C,MAAM,kBAAE,CAAC,SAAS,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC;AAC9C,CAAC;AAPD,oDAOC;AAED,SAAgB,aAAa,CAAC,SAAoB,EAAE,sBAAgC;IAClF,IAAI,sBAAsB,CAAC,SAAS,CAAC,MAAM,EAAE;QAC3C,MAAM,gBAAgB,GAAG,sBAAsB,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CACrE,CAAC,CAAU,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CACvD,CAAC,CAAC,CAAC,CAAC;QACL,IAAI,gBAAgB,EAAE;YACpB,6BAA6B;YAC7B,gBAAgB,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SAC3C;aAAM;YACL,sBAAsB,CAAC,SAAS,CAAC,MAAM,GAAG,sBAAsB,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CACtF,SAAS,CACV,CAAC;SACH;KACF;SAAM;QACL,IAAI,OAAO,sBAAsB,CAAC,SAAS,KAAK,QAAQ,EAAE;YACxD,gDAAgD;YAChD,sBAAsB,CAAC,SAAS,GAAG,EAAE,CAAC;SACvC;QACD,sBAAsB,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,CAAC;KACrD;IACD,OAAO,sBAAsB,CAAC;AAChC,CAAC;AArBD,sCAqBC;AAED,SAAgB,gBAAgB,CAAC,KAAa,EAAE,sBAAgC;IAC9E,IAAI,sBAAsB,CAAC,SAAS,CAAC,MAAM,EAAE;QAC3C,MAAM,gBAAgB,GAAG,sBAAsB,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CACxE,CAAC,CAAU,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,KAAK,CACtC,CAAC;QACF,IAAI,gBAAgB,GAAG,CAAC,CAAC,EAAE;YACzB,6BAA6B;YAC7B,sBAAsB,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC;SACrE;KACF;IACD,OAAO,sBAAsB,CAAC;AAChC,CAAC;AAXD,4CAWC","sourcesContent":["import fs from 'fs-extra';\nimport path from 'path';\nimport { Builder } from 'xml2js';\n\nimport { Document, getProjectXMLPathAsync, readXMLAsync } from './Manifest';\nimport { XMLItem } from './Styles';\n\nconst BASE_STRINGS_XML = `<resources></resources>`;\n\nexport async function getProjectStringsXMLPathAsync(\n  projectDir: string,\n  { kind = 'values' }: { kind?: string } = {}\n): Promise<string | null> {\n  return getProjectXMLPathAsync(projectDir, { kind, name: 'strings' });\n}\n\nexport async function readStringsXMLAsync(stringsPath: string): Promise<Document> {\n  return readXMLAsync({ path: stringsPath, fallback: BASE_STRINGS_XML });\n}\n\nexport async function writeStringsXMLAsync(\n  stringsPath: string,\n  stringsContent: any\n): Promise<void> {\n  const stringsXml = new Builder().buildObject(stringsContent);\n  await fs.ensureDir(path.dirname(stringsPath));\n  await fs.writeFile(stringsPath, stringsXml);\n}\n\nexport function setStringItem(itemToAdd: XMLItem[], stringFileContentsJSON: Document) {\n  if (stringFileContentsJSON.resources.string) {\n    const stringNameExists = stringFileContentsJSON.resources.string.filter(\n      (e: XMLItem) => e['$'].name === itemToAdd[0]['$'].name\n    )[0];\n    if (stringNameExists) {\n      // replace the previous value\n      stringNameExists['_'] = itemToAdd[0]['_'];\n    } else {\n      stringFileContentsJSON.resources.string = stringFileContentsJSON.resources.string.concat(\n        itemToAdd\n      );\n    }\n  } else {\n    if (typeof stringFileContentsJSON.resources === 'string') {\n      // file was empty and JSON is `{resources : ''}`\n      stringFileContentsJSON.resources = {};\n    }\n    stringFileContentsJSON.resources.string = itemToAdd;\n  }\n  return stringFileContentsJSON;\n}\n\nexport function removeStringItem(named: string, stringFileContentsJSON: Document) {\n  if (stringFileContentsJSON.resources.string) {\n    const stringNameExists = stringFileContentsJSON.resources.string.findIndex(\n      (e: XMLItem) => e['$'].name === named\n    );\n    if (stringNameExists > -1) {\n      // replace the previous value\n      stringFileContentsJSON.resources.string.splice(stringNameExists, 1);\n    }\n  }\n  return stringFileContentsJSON;\n}\n"]}