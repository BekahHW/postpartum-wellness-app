"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Manifest_1 = require("./Manifest");
const BASE_STYLES_XML = `<?xml version="1.0" encoding="utf-8"?><resources></resources>`;
async function getProjectColorsXMLPathAsync(projectDir, { kind = 'values' } = {}) {
    return Manifest_1.getProjectXMLPathAsync(projectDir, { kind, name: 'colors' });
}
exports.getProjectColorsXMLPathAsync = getProjectColorsXMLPathAsync;
async function readColorsXMLAsync(path) {
    return Manifest_1.readXMLAsync({ path, fallback: BASE_STYLES_XML });
}
exports.readColorsXMLAsync = readColorsXMLAsync;
function setColorItem(itemToAdd, colorFileContentsJSON) {
    var _a;
    if ((_a = colorFileContentsJSON.resources) === null || _a === void 0 ? void 0 : _a.color) {
        const colorNameExists = colorFileContentsJSON.resources.color.filter((e) => e['$'].name === itemToAdd[0]['$'].name)[0];
        if (colorNameExists) {
            colorNameExists['_'] = itemToAdd[0]['_'];
        }
        else {
            colorFileContentsJSON.resources.color = colorFileContentsJSON.resources.color.concat(itemToAdd);
        }
    }
    else {
        if (typeof colorFileContentsJSON.resources === 'string') {
            //file was empty and JSON is `{resources : ''}`
            colorFileContentsJSON.resources = {};
        }
        colorFileContentsJSON.resources.color = itemToAdd;
    }
    return colorFileContentsJSON;
}
exports.setColorItem = setColorItem;
//# sourceMappingURL=Colors.js.map