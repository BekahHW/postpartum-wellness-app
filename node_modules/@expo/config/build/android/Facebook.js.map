{"version":3,"file":"Facebook.js","sourceRoot":"","sources":["../../src/android/Facebook.ts"],"names":[],"mappings":"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","sourcesContent":["import { Parser } from 'xml2js';\n\nimport { ExpoConfig } from '../Config.types';\nimport { addMetaDataItemToMainApplication, Document, getMainApplication } from './Manifest';\nimport {\n  getProjectStringsXMLPathAsync,\n  readStringsXMLAsync,\n  removeStringItem,\n  setStringItem,\n  writeStringsXMLAsync,\n} from './Strings';\nimport { XMLItem } from './Styles';\n\nconst facebookSchemeActivity = (scheme: string) => `\n<activity\n    android:name=\"com.facebook.CustomTabActivity\"\n    android:exported=\"true\">\n    <intent-filter>\n        <action android:name=\"android.intent.action.VIEW\" />\n        <category android:name=\"android.intent.category.DEFAULT\" />\n        <category android:name=\"android.intent.category.BROWSABLE\" />\n        <data android:scheme=\"${scheme}\" />\n    </intent-filter>\n</activity>\n`;\n\nexport function getFacebookScheme(config: ExpoConfig) {\n  return config.facebookScheme ?? null;\n}\n\nexport function getFacebookAppId(config: ExpoConfig) {\n  return config.facebookAppId ?? null;\n}\n\nexport function getFacebookDisplayName(config: ExpoConfig) {\n  return config.facebookDisplayName ?? null;\n}\nexport function getFacebookAutoInitEnabled(config: ExpoConfig) {\n  return config.hasOwnProperty('facebookAutoInitEnabled') ? config.facebookAutoInitEnabled : null;\n}\n\nexport function getFacebookAutoLogAppEvents(config: ExpoConfig) {\n  return config.hasOwnProperty('facebookAutoLogAppEventsEnabled')\n    ? config.facebookAutoLogAppEventsEnabled\n    : null;\n}\n\nexport function getFacebookAdvertiserIDCollection(config: ExpoConfig) {\n  return config.hasOwnProperty('facebookAdvertiserIDCollectionEnabled')\n    ? config.facebookAdvertiserIDCollectionEnabled\n    : null;\n}\n\nexport async function setFacebookAppIdString(config: ExpoConfig, projectDirectory: string) {\n  const appId = getFacebookAppId(config);\n\n  const stringsPath = await getProjectStringsXMLPathAsync(projectDirectory);\n  if (!stringsPath) {\n    throw new Error(`There was a problem setting your Facebook App ID in ${stringsPath}.`);\n  }\n\n  let stringsJSON = await readStringsXMLAsync(stringsPath);\n  if (appId) {\n    const stringItemToAdd: XMLItem[] = [{ _: appId, $: { name: 'facebook_app_id' } }];\n    stringsJSON = setStringItem(stringItemToAdd, stringsJSON);\n  } else {\n    stringsJSON = removeStringItem('facebook_app_id', stringsJSON);\n  }\n\n  try {\n    await writeStringsXMLAsync(stringsPath, stringsJSON);\n  } catch (e) {\n    throw new Error(`Error setting facebookAppId. Cannot write strings.xml to ${stringsPath}.`);\n  }\n  return true;\n}\n\nexport async function setFacebookConfig(config: ExpoConfig, manifestDocument: Document) {\n  const scheme = getFacebookScheme(config);\n  const appId = getFacebookAppId(config);\n  const displayName = getFacebookDisplayName(config);\n  const autoInitEnabled = getFacebookAutoInitEnabled(config);\n  const autoLogAppEvents = getFacebookAutoLogAppEvents(config);\n  const advertiserIdCollection = getFacebookAdvertiserIDCollection(config);\n\n  let mainApplication = getMainApplication(manifestDocument);\n\n  // Remove all Facebook CustomTabActivities first\n  if (mainApplication.hasOwnProperty('activity')) {\n    mainApplication['activity'] = mainApplication['activity'].filter(\n      (activity: Record<string, any>) => {\n        return activity['$']?.['android:name'] !== 'com.facebook.CustomTabActivity';\n      }\n    );\n  }\n\n  if (scheme) {\n    const facebookSchemeActivityXML = facebookSchemeActivity(scheme);\n    const parser = new Parser();\n    const facebookSchemeActivityJSON = await parser.parseStringPromise(facebookSchemeActivityXML);\n\n    //TODO: don't write if facebook scheme activity is already present\n    if (mainApplication.hasOwnProperty('activity')) {\n      mainApplication['activity'] = mainApplication['activity'].concat(\n        facebookSchemeActivityJSON['activity']\n      );\n    } else {\n      mainApplication['activity'] = facebookSchemeActivityJSON['activity'];\n    }\n  }\n\n  if (appId) {\n    mainApplication = addMetaDataItemToMainApplication(\n      mainApplication,\n      'com.facebook.sdk.ApplicationId',\n      '@string/facebook_app_id' // The corresponding string is set in setFacebookAppIdString\n    );\n  } else {\n    mainApplication = removeMetaDataItemFromMainApplication(\n      mainApplication,\n      'com.facebook.sdk.ApplicationId'\n    );\n  }\n  if (displayName) {\n    mainApplication = addMetaDataItemToMainApplication(\n      mainApplication,\n      'com.facebook.sdk.ApplicationName',\n      displayName\n    );\n  } else {\n    mainApplication = removeMetaDataItemFromMainApplication(\n      mainApplication,\n      'com.facebook.sdk.ApplicationName'\n    );\n  }\n  if (autoInitEnabled !== null) {\n    mainApplication = addMetaDataItemToMainApplication(\n      mainApplication,\n      'com.facebook.sdk.AutoInitEnabled',\n      autoInitEnabled ? 'true' : 'false'\n    );\n  } else {\n    mainApplication = removeMetaDataItemFromMainApplication(\n      mainApplication,\n      'com.facebook.sdk.AutoInitEnabled'\n    );\n  }\n  if (autoLogAppEvents !== null) {\n    mainApplication = addMetaDataItemToMainApplication(\n      mainApplication,\n      'com.facebook.sdk.AutoLogAppEventsEnabled',\n      autoLogAppEvents ? 'true' : 'false'\n    );\n  } else {\n    mainApplication = removeMetaDataItemFromMainApplication(\n      mainApplication,\n      'com.facebook.sdk.AutoLogAppEventsEnabled'\n    );\n  }\n  if (advertiserIdCollection !== null) {\n    mainApplication = addMetaDataItemToMainApplication(\n      mainApplication,\n      'com.facebook.sdk.AdvertiserIDCollectionEnabled',\n      advertiserIdCollection ? 'true' : 'false'\n    );\n  } else {\n    mainApplication = removeMetaDataItemFromMainApplication(\n      mainApplication,\n      'com.facebook.sdk.AdvertiserIDCollectionEnabled'\n    );\n  }\n\n  return manifestDocument;\n}\n\n// TODO: Use Manifest version after https://github.com/expo/expo-cli/pull/2587 lands\nfunction removeMetaDataItemFromMainApplication(mainApplication: any, itemName: string) {\n  if (mainApplication.hasOwnProperty('meta-data')) {\n    const index = mainApplication['meta-data'].findIndex(\n      (e: any) => e['$']['android:name'] === itemName\n    );\n\n    if (index > -1) {\n      mainApplication['meta-data'].splice(index, 1);\n    }\n  }\n  return mainApplication;\n}\n"]}