{"version":3,"file":"Colors.js","sourceRoot":"","sources":["../../src/android/Colors.ts"],"names":[],"mappings":";;AAAA,yCAA4E;AAG5E,MAAM,eAAe,GAAG,+DAA+D,CAAC;AAEjF,KAAK,UAAU,4BAA4B,CAChD,UAAkB,EAClB,EAAE,IAAI,GAAG,QAAQ,KAAwB,EAAE;IAE3C,OAAO,iCAAsB,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC;AACtE,CAAC;AALD,oEAKC;AAEM,KAAK,UAAU,kBAAkB,CAAC,IAAY;IACnD,OAAO,uBAAY,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,eAAe,EAAE,CAAC,CAAC;AAC3D,CAAC;AAFD,gDAEC;AAED,SAAgB,YAAY,CAAC,SAAoB,EAAE,qBAA+B;;IAChF,UAAI,qBAAqB,CAAC,SAAS,0CAAE,KAAK,EAAE;QAC1C,MAAM,eAAe,GAAG,qBAAqB,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAClE,CAAC,CAAU,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CACvD,CAAC,CAAC,CAAC,CAAC;QACL,IAAI,eAAe,EAAE;YACnB,eAAe,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SAC1C;aAAM;YACL,qBAAqB,CAAC,SAAS,CAAC,KAAK,GAAG,qBAAqB,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAClF,SAAS,CACV,CAAC;SACH;KACF;SAAM;QACL,IAAI,OAAO,qBAAqB,CAAC,SAAS,KAAK,QAAQ,EAAE;YACvD,+CAA+C;YAC/C,qBAAqB,CAAC,SAAS,GAAG,EAAE,CAAC;SACtC;QACD,qBAAqB,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,CAAC;KACnD;IACD,OAAO,qBAAqB,CAAC;AAC/B,CAAC;AApBD,oCAoBC","sourcesContent":["import { Document, getProjectXMLPathAsync, readXMLAsync } from './Manifest';\nimport { XMLItem } from './Styles';\n\nconst BASE_STYLES_XML = `<?xml version=\"1.0\" encoding=\"utf-8\"?><resources></resources>`;\n\nexport async function getProjectColorsXMLPathAsync(\n  projectDir: string,\n  { kind = 'values' }: { kind?: string } = {}\n): Promise<string | null> {\n  return getProjectXMLPathAsync(projectDir, { kind, name: 'colors' });\n}\n\nexport async function readColorsXMLAsync(path: string): Promise<Document> {\n  return readXMLAsync({ path, fallback: BASE_STYLES_XML });\n}\n\nexport function setColorItem(itemToAdd: XMLItem[], colorFileContentsJSON: Document) {\n  if (colorFileContentsJSON.resources?.color) {\n    const colorNameExists = colorFileContentsJSON.resources.color.filter(\n      (e: XMLItem) => e['$'].name === itemToAdd[0]['$'].name\n    )[0];\n    if (colorNameExists) {\n      colorNameExists['_'] = itemToAdd[0]['_'];\n    } else {\n      colorFileContentsJSON.resources.color = colorFileContentsJSON.resources.color.concat(\n        itemToAdd\n      );\n    }\n  } else {\n    if (typeof colorFileContentsJSON.resources === 'string') {\n      //file was empty and JSON is `{resources : ''}`\n      colorFileContentsJSON.resources = {};\n    }\n    colorFileContentsJSON.resources.color = itemToAdd;\n  }\n  return colorFileContentsJSON;\n}\n"]}