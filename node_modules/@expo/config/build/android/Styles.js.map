{"version":3,"file":"Styles.js","sourceRoot":"","sources":["../../src/android/Styles.ts"],"names":[],"mappings":"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","sourcesContent":["import fs from 'fs-extra';\nimport path from 'path';\nimport { Builder } from 'xml2js';\n\nimport { Document, getProjectXMLPathAsync } from './Manifest';\n\nexport type XMLItem = {\n  _: string;\n  $: { name: string; [key: string]: string };\n};\n\nexport async function getProjectStylesXMLPathAsync(\n  projectDir: string,\n  { kind = 'values' }: { kind?: string } = {}\n): Promise<string | null> {\n  return getProjectXMLPathAsync(projectDir, { kind, name: 'styles' });\n}\n\nexport async function writeStylesXMLAsync(options: { path: string; xml: any }): Promise<void> {\n  const stylesXml = new Builder().buildObject(options.xml);\n  await fs.ensureDir(path.dirname(options.path));\n  await fs.writeFile(options.path, stylesXml);\n}\n\nexport function buildItem({\n  name,\n  parent,\n  value,\n}: {\n  name: string;\n  parent?: string;\n  value: string;\n}): XMLItem {\n  const item: XMLItem = { _: value, $: { name } };\n  if (parent) {\n    item['$'].parent = parent;\n  }\n  return item;\n}\n\nfunction ensureStyleShape(xml: Document): Document {\n  if (!xml) {\n    xml = {};\n  }\n  if (!xml.resources) {\n    xml.resources = {};\n  }\n  if (!Array.isArray(xml.resources.style)) {\n    xml.resources.style = [];\n  }\n  return xml;\n}\n\nfunction buildParent(parent: { name: string; parent: string; items?: any[] }): Document {\n  return {\n    $: { name: parent.name, parent: parent.parent },\n    item: parent.items ?? [],\n  };\n}\n\nexport function getStyleParent(\n  xml: Document,\n  parent: { name: string; parent?: string }\n): Document | null {\n  const app = xml.resources.style.filter?.((e: any) => {\n    let matches = e['$']['name'] === parent.name;\n    if (parent.parent != null && matches) {\n      matches = e['$']['parent'] === parent.parent;\n    }\n    return matches;\n  })?.[0];\n  return app ?? null;\n}\n\nexport function setStylesItem({\n  item,\n  xml,\n  parent,\n}: {\n  item: XMLItem[];\n  xml: Document;\n  parent: { name: string; parent: string };\n}): Document {\n  xml = ensureStyleShape(xml);\n\n  let appTheme = getStyleParent(xml, parent);\n\n  if (!appTheme) {\n    appTheme = buildParent(parent);\n    xml.resources.style.push(appTheme);\n  }\n\n  if (appTheme.item) {\n    const existingItem = appTheme.item.filter(\n      (_item: XMLItem) => _item['$'].name === item[0].$.name\n    )[0];\n\n    // Don't want to 2 of the same item, so if one exists, we overwrite it\n    if (existingItem) {\n      existingItem['_'] = item[0]['_'];\n    } else {\n      appTheme.item = appTheme.item.concat(item);\n    }\n  } else {\n    appTheme.item = item;\n  }\n  return xml;\n}\n"]}