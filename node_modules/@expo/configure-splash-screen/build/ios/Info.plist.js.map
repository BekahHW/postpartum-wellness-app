{"version":3,"file":"Info.plist.js","sourceRoot":"","sources":["../../src/ios/Info.plist.ts"],"names":[],"mappings":"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","sourcesContent":["import fs from 'fs-extra';\nimport path from 'path';\n\nimport StateManager from '../StateManager';\nimport { StatusBarOptions, StatusBarStyle } from '../constants';\nimport { replace, insert } from '../string-helpers';\n\nconst INFO_PLIST_FILE_PATH = 'Info.plist';\n\nfunction getUIStatusBarStyle(statusBarStyle: StatusBarStyle) {\n  return `UIStatusBarStyle${statusBarStyle\n    .replace(/(^\\w)|(-\\w)/g, s => s.toUpperCase())\n    .replace(/-/g, '')}`;\n}\n\n/**\n * Configures [INFO_PLIST] to show [STORYBOARD] filename as Splash/Launch Screen.\n */\nexport default async function configureInfoPlist(\n  iosProjectPath: string,\n  { statusBarHidden, statusBarStyle }: Partial<StatusBarOptions> = {}\n) {\n  const filePath = path.resolve(iosProjectPath, INFO_PLIST_FILE_PATH);\n  const fileContent = await fs.readFile(filePath, 'utf-8');\n  const { state: newContent } = new StateManager<string, boolean>(fileContent)\n    // LaunchScreen\n    .applyAction(content => {\n      const [succeeded, newContent] = replace(content, {\n        replaceContent: '<string>SplashScreen</string>',\n        replacePattern: /(?<=<key>UILaunchStoryboardName<\\/key>(.|\\n)*?)<string>.*?<\\/string>/m,\n      });\n      return [newContent, 'launchScreenReplaced', succeeded];\n    })\n    .applyAction((content, { launchScreenReplaced }) => {\n      if (launchScreenReplaced) {\n        return [content, 'launchScreenInserted', false];\n      }\n      const [succeeded, newContent] = insert(\n        content,\n        {\n          insertContent: `  <key>UILaunchStoryboardName</key>\\n  <string>SplashScreen</string>\\n`,\n          insertPattern: /<\\/dict>/gm,\n        },\n        true\n      );\n      return [newContent, 'inserted', succeeded];\n    })\n    // StatusBar hiding\n    .applyAction(content => {\n      if (statusBarHidden === undefined) {\n        const [succeeded, newContent] = replace(content, {\n          replaceContent: '',\n          replacePattern: /^.*<key>UIStatusBarHidden<\\/key>(.|\\n)*?<.*\\/>.*$/m,\n        });\n        return [newContent, 'statusBarHidingRemoved', succeeded];\n      }\n      return [content, 'statusBarHidingRemoved', false];\n    })\n    .applyAction((content, { statusBarHidingRemoved }) => {\n      if (statusBarHidingRemoved || statusBarHidden === undefined) {\n        return [content, 'statusBarHidingReplaced', false];\n      }\n      const [succeeded, newContent] = replace(content, {\n        replaceContent: String(statusBarHidden),\n        replacePattern: /(?<=<key>UIStatusBarHidden<\\/key>(.|\\n)*?<).*(?=\\/>)/m,\n      });\n      return [newContent, 'statusBarHidingReplaced', succeeded];\n    })\n    .applyAction((content, { statusBarHidingReplaced }) => {\n      if (statusBarHidingReplaced || statusBarHidden === undefined) {\n        return [content, 'statusBarHidingInserted', false];\n      }\n      const [succeeded, newContent] = insert(\n        content,\n        {\n          insertContent: `  <key>UIStatusBarHidden</key>\\n  <${statusBarHidden}/>\\n`,\n          insertPattern: /<\\/dict>/gm,\n        },\n        true\n      );\n      return [newContent, 'statusBarHidingInserted', succeeded];\n    })\n    // StatusBar style\n    .applyAction(content => {\n      if (statusBarStyle === undefined) {\n        const [succeeded, newContent] = replace(content, {\n          replacePattern: /^.*<key>UIStatusBarStyle<\\/key>(.|\\n)*?<string>.*<\\/string>.*$/m,\n          replaceContent: '',\n        });\n        return [newContent, 'statusBarStyleRemoved', succeeded];\n      }\n      return [content, 'statusBarStyleRemoved', false];\n    })\n    .applyAction((content, { statusBarStyleRemoved }) => {\n      if (statusBarStyleRemoved || statusBarStyle === undefined) {\n        return [content, 'statusBarStyleReplaced', false];\n      }\n      const [succeeded, newContent] = replace(content, {\n        replaceContent: getUIStatusBarStyle(statusBarStyle),\n        replacePattern: /(?<=<key>UIStatusBarStyle<\\/key>(.|\\n)*?<string>).*(?=<\\/string>)/m,\n      });\n      return [newContent, 'statusBarStyleReplaced', succeeded];\n    })\n    .applyAction((content, { statusBarStyleReplaced }) => {\n      if (statusBarStyleReplaced || statusBarStyle === undefined) {\n        return [content, 'statusBarStyleInserted', false];\n      }\n      const [succeeded, newContent] = insert(\n        content,\n        {\n          insertContent: `  <key>UIStatusBarStyle</key>\\n  <string>${getUIStatusBarStyle(\n            statusBarStyle\n          )}</string>\\n`,\n          insertPattern: /<\\/dict>/gm,\n        },\n        true\n      );\n      return [newContent, 'statusBarStyleInserted', succeeded];\n    });\n  await fs.writeFile(filePath, newContent);\n}\n"]}